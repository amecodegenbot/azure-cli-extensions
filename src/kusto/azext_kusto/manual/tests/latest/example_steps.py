# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
import unittest

from azure_devtools.scenario_tests import AllowLargeResponse
from azure.cli.testsdk import ScenarioTest
from .. import try_manual
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# EXAMPLE: /Clusters/put/KustoClustersCreateOrUpdate
def step_cluster_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az kusto cluster create '
             '--cluster-name "{myCluster}" '
             '--type "SystemAssigned" '
             '--location "southcentralus" '
             '--enable-purge true '
             '--enable-streaming-ingest true '
             '--key-vault-properties key-name="" key-vault-uri="" key-version="" '
             '--sku name="Standard_D11_v2" capacity=2 tier="Standard" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az kusto cluster wait --created '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclusterscreateorupdate
@try_manual
def step_cluster_create2(test, rg, checks=None):
    test.cmd('az kusto cluster create '
             '--cluster-name "{myCluster}" '
             '--type "SystemAssigned" '
             '--location "southcentralus" '
             '--enable-purge true '
             '--enable-streaming-ingest true '
             '--key-vault-properties key-name="" key-vault-uri="" key-version="" '
             '--sku name="Standard_D11_v2" capacity=2 tier="Standard" '
             '--resource-group "{rg}"',
             checks=[])

# EXAMPLE: kustoclusterschecknameavailability
@try_manual
def step_kustoclusterschecknameavailability(test, rg, checks=None):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: kustoclustersget
@try_manual
def step_cluster_show(test, rg, checks=None):
    test.cmd('az kusto cluster show '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclusterslist
@try_manual
def step_cluster_list(test, rg, checks=None):
    test.cmd('az kusto cluster list',
             checks=[])


# EXAMPLE: kustoclusterslistbyresourcegroup
@try_manual
def step_cluster_list2(test, rg, checks=None):
    test.cmd('az kusto cluster list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclustersstop
@try_manual
def step_cluster_stop(test, rg, checks=None):
    test.cmd('az kusto cluster stop '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclustersstart
@try_manual
def step_cluster_start(test, rg, checks=None):
    test.cmd('az kusto cluster start '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclusterslistresourceskus
@try_manual
def step_cluster_list_sku(test, rg, checks=None):
    test.cmd('az kusto cluster list-sku '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabasescreateorupdate
@try_manual
def step_database_create(test, rg, checks=None):
    test.cmd('az kusto database create '
             '--cluster-name "{myCluster}" '
             '--database-name "KustoDatabase8" '
             '--read-write-database location="southcentralus" soft-delete-period="P1D" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabasechecknameavailability
@try_manual
def step_kustodatabasechecknameavailability(test, rg, checks=None):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: kustodatabaseslistbycluster
@try_manual
def step_database_list(test, rg, checks=None):
    test.cmd('az kusto database list '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabasesget
@try_manual
def step_database_show(test, rg, checks=None):
    test.cmd('az kusto database show '
             '--database-name "KustoDatabase8" '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabasesupdate
@try_manual
def step_database_update(test, rg, checks=None):
    test.cmd('az kusto database update '
             '--cluster-name "{myCluster}" '
             '--database-name "KustoDatabase8" '
             '--read-write-database soft-delete-period="P1D" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabaseprincipalassignmentscreateorupdate
@try_manual
def step_database_principal_assignment_create(test, rg, checks=None):
    test.cmd('az kusto database-principal-assignment create '
             '--cluster-name "{myCluster}" '
             '--database-name "Kustodatabase8" '
             '--principal-id "d9a1f322-1293-4595-91e3-f54f8bb34725" '
             '--principal-type "App" '
             '--role "Admin" '
             '--tenant-id "33e01921-4d64-4f8c-a055-5bdaffd5e33d" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az kusto database-principal-assignment wait --created '
             '--cluster-name "{myCluster}" '
             '--database-name "Kustodatabase8" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabaselistprincipals
@try_manual
def step_database_list_principal(test, rg, checks=None):
    test.cmd('az kusto database list-principal '
             '--cluster-name "{myCluster}" '
             '--database-name "Kustodatabase8" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabaseprincipalassignmentsget
@try_manual
def step_database_principal_assignment_show(test, rg, checks=None):
    test.cmd('az kusto database-principal-assignment show '
             '--cluster-name "{myCluster}" '
             '--database-name "Kustodatabase8" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustodatabaseprincipalassignmentsdelete
@try_manual
def step_database_principal_assignment_delete(test, rg, checks=None):
    test.cmd('az kusto database-principal-assignment delete -y '
             '--cluster-name "{myCluster}" '
             '--database-name "Kustodatabase8" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclusterprincipalassignmentscreateorupdate
@try_manual
def step_cluster_principal_assignment_create(test, rg, checks=None):
    test.cmd('az kusto cluster-principal-assignment create '
             '--cluster-name "{myCluster}" '
             '--principal-id "d9a1f322-1293-4595-91e3-f54f8bb34725" '
             '--principal-type "App" '
             '--role "AllDatabasesViewer" '
             '--tenant-id "33e01921-4d64-4f8c-a055-5bdaffd5e33d" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az kusto cluster-principal-assignment wait --created '
             '--principal-assignment-name "kustoprincipal1" '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclusterprincipalassignmentsget
@try_manual
def step_cluster_principal_assignment_show(test, rg, checks=None):
    test.cmd('az kusto cluster-principal-assignment show '
             '--cluster-name "{myCluster}" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: attacheddatabaseconfigurationscreateorupdate
@try_manual
def step_attached_database_configuration_create(test, rg, checks=None):
    test.cmd('az kusto attached-database-configuration create '
             '--attached-database-configuration-name "{myAttachedDatabaseConfiguration}" '
             '--cluster-name "{myCluster2}" '
             '--location "southcentralus" '
             '--cluster-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Kusto/Clu'
             'sters/{myCluster}" '
             '--database-name "Kustodatabase8" '
             '--default-principals-modification-kind "Union" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az kusto attached-database-configuration wait --created '
             '--cluster-name "{myCluster2}" '
             '--attached-database-configuration-name "{myAttachedDatabaseConfiguration}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: attacheddatabaseconfigurationsget
@try_manual
def step_attached_database_configuration_show(test, rg, checks=None):
    test.cmd('az kusto attached-database-configuration show '
             '--attached-database-configuration-name "{myAttachedDatabaseConfiguration}" '
             '--cluster-name "{myCluster2}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoattacheddatabaseconfigurationslistbycluster
@try_manual
def step_attached_database_configuration_list(test, rg, checks=None):
    test.cmd('az kusto attached-database-configuration list '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclusterlistfollowerdatabases
@try_manual
def step_cluster_list_follower_database(test, rg, checks=None):
    test.cmd('az kusto cluster list-follower-database '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclusterdetachfollowerdatabases
@try_manual
def step_cluster_detach_follower_database(test, rg, checks=None):
    test.cmd('az kusto cluster detach-follower-database '
             '--cluster-name "{myCluster}" '
             '--attached-database-configuration-name "{myAttachedDatabaseConfiguration}" '
             '--cluster-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Kusto/clu'
             'sters/{myCluster2}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustooperationslist
@try_manual
def step_kustooperationslist(test, rg, checks=None):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: kustodatabasesdelete
@try_manual
def step_database_delete(test, rg, checks=None):
    test.cmd('az kusto database delete -y '
             '--cluster-name "{myCluster}" '
             '--database-name "KustoDatabase8" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: kustoclustersdelete
@try_manual
def step_cluster_delete(test, rg, checks=None):
    test.cmd('az kusto cluster delete -y '
             '--cluster-name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: KustoDataConnectionValidation
@try_manual
def step_data_connection_event_hub_data_connection_val(test, rg, checks=None):
    test.cmd('az kusto data-connection event-hub data-connection-validation '
             '--cluster-name "{myCluster}" '
             '--database-name "KustoDatabase8" '
             '--data-connection-name "{myDataConnection}" '
             '--consumer-group "$Default" '
             '--event-hub-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.EventHub/namespaces/{eventhub_namespace}/eventhubs/{eventhub_name}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: KustoDataConnectionsCreateOrUpdate
@try_manual
def step_data_connection_event_hub_create(test, rg, checks=None):
    test.cmd('az kusto data-connection event-hub create '
             '--cluster-name "{myCluster}" '
             '--data-connection-name "{myDataConnection}" '
             '--database-name "KustoDatabase8" '
             '--location "southcentralus" '
             '--consumer-group "$Default" '
             '--event-hub-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.EventHub/namespaces/{eventhub_namespace}/eventhubs/{eventhub_name}" '
             '--resource-group "{rg}"',
             checks=[])

# EXAMPLE: /DataConnections/post/KustoDataConnectionValidation
@try_manual
def step_data_connection_event(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az kusto data-connection event-hub data-connection-validation '
             '--cluster-name "{myCluster}" '
             '--database-name "KustoDatabase8" '
             '--name "{myDataConnection}" '
             '--consumer-group "$Default" '
             '--event-hub-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.EventHub/namespaces/{eventhub_namespace}/eventhubs/{eventhub_name}"  '
             '--resource-group "{rg}"',
             checks=checks)

# EXAMPLE: KustoDataConnectionsGet
@try_manual
def step_data_connection_show(test, rg, checks=None):
    test.cmd('az kusto data-connection show '
             '--cluster-name "{myCluster}" '
             '--data-connection-name "{myDataConnection}" '
             '--database-name "KustoDatabase8" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: KustoDataConnectionsUpdate
@try_manual
def step_data_connection_event_hub_update(test, rg, checks=None):
    test.cmd('az kusto data-connection event-hub update '
             '--cluster-name "{myCluster}" '
             '--data-connection-name "{myDataConnection}" '
             '--database-name "KustoDatabase8" '
             '--location "southcentralus" '
             '--consumer-group "$Default" '
             '--event-hub-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.EventHub/namespaces/{eventhub_namespace}/eventhubs/{eventhub_name}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /DatabasePrincipalAssignments/put/KustoDatabasePrincipalAssignmentsCreateOrUpdate
@try_manual
def step_database_principal_assignment_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az kusto database-principal-assignment create '
             '--cluster-name "{myCluster}" '
             '--database-name "Kustodatabase8" '
             '--principal-id "{myPrincipalId}" '
             '--principal-type "App" '
             '--role "Admin" '
             '--tenant-id "{myTenantId}" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ClusterPrincipalAssignments/put/KustoClusterPrincipalAssignmentsCreateOrUpdate
@try_manual
def step_cluster_principal_assignment_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az kusto cluster-principal-assignment create '
             '--cluster-name "{myCluster}" '
             '--principal-id "{myPrincipalId}" '
             '--principal-type "App" '
             '--role "AllDatabasesAdmin" '
             '--tenant-id "{myTenantId}" '
             '--principal-assignment-name "kustoprincipal1" '
             '--resource-group "{rg}"',
             checks=checks)